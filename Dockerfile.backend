# ===================================
# Multi-stage build for conda optimization
# ===================================

# Build stage - Create conda environment
FROM continuumio/miniconda3:latest AS build

WORKDIR /app

# Copy backend-specific environment file
COPY environment-backend.yml .

# Install conda-pack for environment packaging
RUN conda install conda-pack -y

# Create environment from backend yml file  
RUN conda env create -f environment-backend.yml

# Clean conda cache to save space (~100MB savings)
RUN conda clean -afy

# Pack environment using conda-pack (huge size reduction)
RUN conda-pack -n stocksense-backend -o /tmp/env.tar && \
    mkdir /venv && cd /venv && tar xf /tmp/env.tar && \
    rm /tmp/env.tar

# Fix up environment paths
RUN /venv/bin/conda-unpack

# ===================================
# Runtime stage - Minimal production image  
# ===================================
FROM python:3.10-slim AS runtime

# Copy the packed environment from build stage
COPY --from=build /venv /venv

# Make sure we use the packed environment
ENV PATH=/venv/bin:$PATH

# Set working directory
WORKDIR /app

# Copy application code
COPY . .

# Create directory for SQLite database
RUN mkdir -p /app/data

# Expose port for FastAPI backend
EXPOSE 8000

# Health check for backend API (using packed environment)
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD python -c "import sys, requests; sys.exit(0) if requests.get('http://localhost:8000/health', timeout=5).ok else sys.exit(1)"

# Run the FastAPI backend application
CMD ["uvicorn", "stocksense.main:app", "--host", "0.0.0.0", "--port", "8000"]