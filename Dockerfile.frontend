# ===================================
# Multi-stage build for conda optimization
# ===================================

# Build stage - Create conda environment
FROM continuumio/miniconda3:latest AS build

WORKDIR /app

# Copy frontend-specific environment file
COPY environment-frontend.yml .

# Install conda-pack for environment packaging
RUN conda install conda-pack -y

# Create frontend environment from yml file
RUN conda env create -f environment-frontend.yml

# Clean conda cache to save space (~100MB savings)
RUN conda clean -afy

# Pack environment using conda-pack (significant size reduction for frontend)
RUN conda-pack -n stocksense-frontend -o /tmp/env.tar && \
    mkdir /venv && cd /venv && tar xf /tmp/env.tar && \
    rm /tmp/env.tar

# Fix up environment paths
RUN /venv/bin/conda-unpack

# ===================================
# Runtime stage - Minimal production image  
# ===================================
FROM python:3.10-slim AS runtime

# Copy the packed environment from build stage
COPY --from=build /venv /venv

# Make sure we use the packed environment
ENV PATH=/venv/bin:$PATH

# Set working directory
WORKDIR /app

# Copy only frontend files (not the entire project)
COPY app.py .

# Create non-root user for security
RUN useradd -m -u 1000 streamlituser

# Expose port for Streamlit
EXPOSE 8501

# Create Streamlit config directory (as root, then change ownership)
RUN mkdir -p /home/streamlituser/.streamlit && \
    chown -R streamlituser:streamlituser /home/streamlituser/.streamlit && \
    chown -R streamlituser:streamlituser /app

# Switch to non-root user
USER streamlituser

# Configure Streamlit
RUN echo '[server]' > /home/streamlituser/.streamlit/config.toml && \
    echo 'headless = true' >> /home/streamlituser/.streamlit/config.toml && \
    echo 'port = 8501' >> /home/streamlituser/.streamlit/config.toml && \
    echo 'enableCORS = false' >> /home/streamlituser/.streamlit/config.toml && \
    echo 'enableXsrfProtection = false' >> /home/streamlituser/.streamlit/config.toml

# Health check (using packed environment)
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD python -c "import sys, requests; sys.exit(0) if requests.get('http://localhost:8501/_stcore/health', timeout=5).ok else sys.exit(1)"

# Run Streamlit app
CMD ["streamlit", "run", "app.py", "--server.port=8501", "--server.address=0.0.0.0"]